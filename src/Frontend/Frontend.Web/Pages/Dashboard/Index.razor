@page "/"
@using Backend.Domain.Entities.Agents
@using Backend.Domain.Entities.Authentication.Tenants;
@using Backend.Domain.Entities.Authentication.Users.UserContext;
@using Backend.Domain.Entities.Products
@using Frontend.Web.Models.Client
@using Frontend.Web.Services.Authentication;
@using Frontend.Web.Services.Products;
@using Frontend.Web.Services.Agents;
@inject AgentService _agentService;
@inject ProductService _productService;
@inject AuthenticationService _authenticationService;
@inject NavigationManager Navigator
@inject Sotsera.Blazor.Toaster.IToaster Toaster



@if (isLoading)
{
    <Frontend.Web.Components.Loader.LoadingSpinner />
}
else
{
    <div class="container-fluid">
        <nav aria-label="breadcrumb" class="mb-3">
            <ol class="breadcrumb bg-info-subtle px-3 py-2 rounded">
                <li class="breadcrumb-item">
                    <a href="/" class="text-info d-flex align-items-center">
                        <i class="ti ti-home fs-4 mt-1"></i>
                        <p class="text-info mb-0" style="margin-left: 10px;">Homepage</p>                    
                    </a>
                </li>
            </ol>
        </nav>
        <div class="row">
            <div class="col-md-4">
                <Frontend.Web.Components.Dashboard.CompanyNameCard IsAuthenticated=isAuthenticated Profile=@dashboardProfile />
            </div>
            <div class="col-md-2">
                <div class="card card-body bg-success" style="height: 205px;">
                    <h2>
                        <i class="ti ti-building-store cursor-pointer m-2" style="color: #fff"></i>
                    </h2>
                    <h3 style="font-size: 30px" class="card-title text-light text-center fw-semibold mb-4">
                        <strong>@totalProducts</strong>
                    </h3>
                    <p class="text-light mb-0"><strong>Total products</strong></p>
                </div>
            </div>
            <div class="col-md-2">
                <div class="card card-body bg-warning" style="height: 205px;">
                    <h2>
                        <i class="ti ti-truck-delivery cursor-pointer m-2" style="color: #fff"></i>
                    </h2>
                    <h3 style="font-size: 30px" class="card-title text-light text-center fw-semibold mb-4">
                        <strong>31</strong>
                    </h3>
                    <p class="text-light mb-0"><strong>Open orders</strong></p>
                </div>
            </div>
            <div class="col-md-2">
                <div class="card card-body bg-danger" style="height: 205px;">
                    <h2>
                        <i class="ti ti-truck-delivery cursor-pointer m-2" style="color: #fff"></i>
                    </h2>
                    <h3 style="font-size: 30px" class="card-title text-light text-center fw-semibold mb-4">
                        <strong>@totalCustomers</strong>
                    </h3>
                    <p class="text-light mb-0"><strong>Total clients</strong></p>
                </div>
            </div>
            <div class="col-md-2">
                <div class="card card-body" style="background-color: #5e00c5; height: 205px;">
                    <h2>
                        <i class="ti ti-truck-delivery cursor-pointer m-2" style="color: #fff"></i>
                    </h2>
                    <h3 style="font-size: 30px" class="card-title text-light text-center fw-semibold mb-4">
                        <strong>65</strong>
                    </h3>
                    <p class="text-light mb-0"><strong>Closed orders</strong></p>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 d-flex align-items-stretch">
                <div class="card w-100">
                    <div class="card-body p-4">
                        <div class="mb-4">
                            <h5 class="card-title fw-semibold">Recent Transactions</h5>
                        </div>
                        <ul class="timeline-widget mb-0 position-relative mb-n5">
                            <li class="timeline-item d-flex position-relative overflow-hidden">
                                <div class="timeline-time text flex-shrink-0 text-end">09:30</div>
                                <div class="timeline-badge-wrap d-flex flex-column align-items-center">
                                    <span class="timeline-badge border-2 border border-primary flex-shrink-0 my-8"></span>
                                    <span class="timeline-badge-border d-block flex-shrink-0"></span>
                                </div>
                                <div class="timeline-desc fs-3 text mt-n1">Payment received from John Doe of $385.90</div>
                            </li>
                            <li class="timeline-item d-flex position-relative overflow-hidden">
                                <div class="timeline-time text flex-shrink-0 text-end">10:00 am</div>
                                <div class="timeline-badge-wrap d-flex flex-column align-items-center">
                                    <span class="timeline-badge border-2 border border-info flex-shrink-0 my-8"></span>
                                    <span class="timeline-badge-border d-block flex-shrink-0"></span>
                                </div>
                                <div class="timeline-desc fs-3 text mt-n1 fw-semibold">
                                    New sale recorded <a href="javascript:void(0)" class="text-primary d-block fw-normal">#ML-3467</a>
                                </div>
                            </li>
                            <li class="timeline-item d-flex position-relative overflow-hidden">
                                <div class="timeline-time text flex-shrink-0 text-end">12:00 am</div>
                                <div class="timeline-badge-wrap d-flex flex-column align-items-center">
                                    <span class="timeline-badge border-2 border border-success flex-shrink-0 my-8"></span>
                                    <span class="timeline-badge-border d-block flex-shrink-0"></span>
                                </div>
                                <div class="timeline-desc fs-3 text mt-n1">Payment was made of $64.95 to Michael</div>
                            </li>
                            <li class="timeline-item d-flex position-relative overflow-hidden">
                                <div class="timeline-time text flex-shrink-0 text-end">09:30 am</div>
                                <div class="timeline-badge-wrap d-flex flex-column align-items-center">
                                    <span class="timeline-badge border-2 border border-warning flex-shrink-0 my-8"></span>
                                    <span class="timeline-badge-border d-block flex-shrink-0"></span>
                                </div>
                                <div class="timeline-desc fs-3 text mt-n1 fw-semibold">
                                    New sale recorded <a href="javascript:void(0)" class="text-primary d-block fw-normal">#ML-3467</a>
                                </div>
                            </li>
                            <li class="timeline-item d-flex position-relative overflow-hidden">
                                <div class="timeline-time text flex-shrink-0 text-end">09:30 am</div>
                                <div class="timeline-badge-wrap d-flex flex-column align-items-center">
                                    <span class="timeline-badge border-2 border border-danger flex-shrink-0 my-8"></span>
                                    <span class="timeline-badge-border d-block flex-shrink-0"></span>
                                </div>
                                <div class="timeline-desc fs-3 text mt-n1 fw-semibold">
                                    New arrival recorded
                                </div>
                            </li>
                            <li class="timeline-item d-flex position-relative overflow-hidden">
                                <div class="timeline-time text flex-shrink-0 text-end">12:00 am</div>
                                <div class="timeline-badge-wrap d-flex flex-column align-items-center">
                                    <span class="timeline-badge border-2 border border-success flex-shrink-0 my-8"></span>
                                </div>
                                <div class="timeline-desc fs-3 text mt-n1">Payment Done</div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="col-lg-8 d-flex align-items-stretch" style="height: 550px;">
                <Frontend.Web.Components.Stock.Table.StockEntryLogViewTable />
            </div>
        </div>
    </div>

}

@code {
    private bool isAuthenticated = false;
    private bool isLoading = true;
    private UserSessionContext? dashboardProfile = null;
    private ApiResponse<IEnumerable<ProductDetail>>? Model;
    public int totalProducts;
    public int totalCustomers; // Para armazenar o total de clientes
    private IEnumerable<Agent> Agents;

    public async Task<bool?> IsAuthenticated()
    {
        var response = await _authenticationService.IsUserLogged();
        if (response.StatusCode == 404 && !response.Result)
        {
            Navigator.NavigateTo("/Login");
        }
        return response.Result;
    }

    public async Task GetDashboardProfile()
    {
        dashboardProfile = await _authenticationService.GetContext();
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        var response = await IsAuthenticated();
        isAuthenticated = response.GetValueOrDefault();
        if (isAuthenticated)
        {
            await GetDashboardProfile();
            await GetProducts();
            await GetAgents();
        }

        isLoading = false;
        StateHasChanged();
    }

    public async Task GetProducts()
    {
        var context = await _authenticationService.GetContext();
        var response = await _productService.GetProducts(context.Tenant.Id.ToString());
        if (response.StatusCode == 200)
        {
            totalProducts = response.Result.Count();
            Model = response;
        }
        StateHasChanged();
    }

    public async Task GetAgents()
    {
        var context = await _authenticationService.GetContext();
        var response = await _agentService.GetAgents(context.Tenant.Id.ToString());


        if (response.StatusCode == 200)
        {
            Agents = response.Result;

            totalCustomers = Agents.Count(agent => agent.AgentTypeId == 2);
        }

        StateHasChanged();
    }
}
