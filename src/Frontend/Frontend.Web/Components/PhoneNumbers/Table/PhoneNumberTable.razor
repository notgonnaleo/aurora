@using Backend.Domain.Entities.Contacts;

@* Phone numbers  *@
<div class="card-body">
    <h5 class="card-title fw-semibold mb-4">Telefones</h5>
    @if (PhoneNumbers.Any())
    {
        <div class="table-responsive">
            <table class="table search-table align-middle text-nowrap">
                <tbody>
                    @foreach (var phoneNumber in PhoneNumbers)
                    {
                        <!-- start row -->
                        <tr class="search-items">
                            <td>
                                <p>@(phoneNumber.Primary ? "Primary address" : $"{string.Empty}")</p>
                            </td>
                            <td>
                                <span class="usr-email-addr" id="@phoneNumber.PhoneId">(+@phoneNumber.AreaCode) @phoneNumber.PhoneNumber</span>
                            </td>
                            <td class="text-end">
                                <div class="action-btn">
                                    <a class="text-primary edit">
                                        <i class="ti ti-eye fs-5" @onclick="() => EditItem(phoneNumber)"></i>
                                    </a>
                                    <a class="text-dark delete ms-2">
                                        <i class="ti ti-trash fs-5" @onclick="() => DeleteModalAction(phoneNumber)"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                        <!-- end row -->
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>Não há números salvos.</p>
    }
</div>
@if(selectedPhoneNumber is not null)
{
    <Frontend.Web.Components.PhoneNumbers.Modals.DeletePhoneNumber ShowModal="ShowModal" Model="selectedPhoneNumber" />
}

@code
{
    Phone? selectedPhoneNumber = null;
    public void DeleteModalAction(Phone phoneNumber)
    {
        ShowModal = true;
        selectedPhoneNumber = phoneNumber;
    }
}

@code
{
    [Parameter]
    public bool ShowModal { get; set; } = false;

    [Parameter]
    public IEnumerable<Phone> PhoneNumbers { get; set; }

    [Parameter]
    public EventCallback<Phone> SelectedItem { get; set; }

    private void EditItem(Phone phoneNumber)
    {
        SelectedItem.InvokeAsync(phoneNumber);
    }
}