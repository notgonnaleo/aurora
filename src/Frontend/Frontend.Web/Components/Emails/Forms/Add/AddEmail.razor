@using Backend.Domain.Entities.Authentication.Users.UserContext;
@using Backend.Domain.Entities.Categories;
@using Backend.Domain.Entities.Contacts;
@using Backend.Domain.Entities.SubCategories;
@using Backend.Domain.Enums.AreaCodes;
@using Frontend.Web.Services.Authentication;
@using Frontend.Web.Services.Categories;
@using Frontend.Web.Services.Contacts;
@using Frontend.Web.Services.SubCategories;
@inject AuthenticationService _authenticationService
@inject ContactService _contactService;
@inject NavigationManager navigator
@inject Sotsera.Blazor.Toaster.IToaster Toaster;

<div class="m-2 p-2">
    <i class="text ti ti-x cursor-pointer" @onclick="ToggleRightSidebar"></i>
</div>
<div class="container scroll-sidebar" style="max-height:550px; overflow-y:auto;">
    <div class="card-body p-2">
        <form>
            @if(Model is null)
            {
                <div class="mb-2 col-sm-12">
                    <div class="row">
                        <div class="mb-2 col-sm-10">
                            <label for="name" class="form-label">E-mail</label>
                            <input type="email" class="form-control" id="email" placeholder="email@address.com" @bind="emailAddress.EmailAddress">
                        </div>
                    </div>
                </div>
                <div class="mb-2 col-sm-6">
                    <button @onclick="CreateEmailAddress" type="button" class="btn btn-primary bottom-0 mb-9 mt-5 rounded">
                        Salvar <i class="ti ti-device-floppy"></i>
                    </button>
                </div>
            }
            else
            {
                <div class="mb-2 col-sm-12">
                    <div class="row">
                        <div class="mb-2 col-sm-10">
                            <label for="name" class="form-label">E-mail</label>
                            <input type="email" class="form-control" id="email" placeholder="email@address.com" @bind="Model.EmailAddress">
                        </div>
                    </div>
                </div>
                <div class="mb-2 col-sm-6">
                    <button @onclick="UpdateEmailAddress" type="button" class="btn btn-primary bottom-0 mb-9 mt-5 rounded">
                        Salvar <i class="ti ti-device-floppy"></i>
                    </button>
                </div>
            }
        </form>
    </div>
</div>

@code
{
    private Email emailAddress = new Email();
    public async Task CreateEmailAddress()
    {
        var context = await _authenticationService.GetContext();
        emailAddress.TenantId = context.Tenant.Id;
        emailAddress.AgentId = AgentId;

        var response = await _contactService.CreateEmailAddress(emailAddress);
        if (response.Successful())
        {
            Toaster.Success("Item was created successfully!.");
            navigator.NavigateTo(navigator.Uri, true);
        }
        else
        {
            Toaster.Error(response.ErrorMessage);
        }
    }

    public async Task UpdateEmailAddress()
    {
        var context = await _authenticationService.GetContext();
        Model.TenantId = context.Tenant.Id;
        Model.AgentId = AgentId;

        var response = await _contactService.UpdateEmailAddress(Model);
        if (response.Successful())
        {
            Toaster.Success("Item was created successfully!.");
            navigator.NavigateTo(navigator.Uri, true);
        }
        else
        {
            Toaster.Error(response.ErrorMessage);
        }
    }
}

@code
{
    [Parameter] public Guid AgentId { get; set; }
    [Parameter] public Email Model { get; set; }
}

@code
{
    [Parameter] public Action ToggleRightSidebar { get; set; }
    [Parameter] public bool CollapseRightSidebar { get; set; }
}