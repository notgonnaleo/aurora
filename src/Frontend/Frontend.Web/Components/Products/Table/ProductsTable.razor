@using Backend.Domain.Entities.Products;
@using Frontend.Web.Services.Products;
@using Frontend.Web.Util.Session;
@using Newtonsoft.Json;
@inject HttpClient Http
@inject SessionStorageAccessor _session
@inject ProductService _productService
@inject NavigationManager NavigationManager

<h3>ProductsTable</h3>

@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>SKU</th>
                <th>Name</th>
                <th>Description</th>
                <th>Value</th>
                <th>LiquidWeight</th>
                <th>TotalWeight</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.SKU</td>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Value</td>
                    <td>@product.LiquidWeight</td>
                    <td>@product.TotalWeight</td>
                    <td><a @onclick="() => Edit(product)">Edit</a></td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
    private List<Product>? products;
    string tenantIdSample = "cabaa57a-37ff-4871-be7d-0187ed3534a5";

    protected override async Task OnInitializedAsync()
    {
        products = await _productService.GetProducts(tenantIdSample);
    }

    private void Edit(Product product)
    {
        NavigationManager.NavigateTo($"/edit-products/{product.Id}");
    }
}
