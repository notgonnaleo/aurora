@using Backend.Domain.Entities.Products
@inject IJSRuntime JSRuntime

<div class="table-responsive @(ItemList is not null && ItemList.Any() ? string.Empty : "collapse")">
    <table id="table-items-review" class="table search-table align-middle text-nowrap table-fixed" style="width: 100%;">
        <thead>
            <tr>
                <th>Name</th>
                <th>Quantity</th>
                <th>Total Value</th>
            </tr>
        </thead>
        <tbody>
            @if(ItemList is not null)
            {
                @foreach (var item in ItemList)
                {
                    <tr>
                        <td>@item.ItemName</td>
                        <td>@item.Quantity</td>
                        <td>@item.Value</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code 
{
    protected override async Task OnInitializedAsync()
    {
        if (ItemList is not null && ItemList.Count() == 1)
        {
            InitializeTable();
        } 
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("startSmartTables", "table-items-review");
        }
    }
}

@code
{
    private async void InitializeTable()
    {
        await OnAfterRenderAsync(true);
    }
}


@code 
{
    [Parameter] public IEnumerable<ItemThumbnail>? ItemList { get; set; }
}
