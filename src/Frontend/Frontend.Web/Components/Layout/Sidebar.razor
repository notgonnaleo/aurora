@using Backend.Domain.Entities.Agents
﻿@using Backend.Domain.Entities.Authentication.Tenants;
@using Backend.Domain.Enums.Agents;
@using Frontend.Web.Services.Agents
@using Frontend.Web.Services.Authentication;
@using Frontend.Web.Services.Tenants;
@inject TenantService _tenantService;
@inject AuthenticationService _authenticationService;
@inject NavigationManager navigator;
@inject AgentService _agentService;


<aside class="left-sidebar d-print-none" data-bs-theme=@(Theme ? "light" : "dark")>
    <div class="">
        <div class="brand-logo d-flex align-items-center justify-content-between">
            <a class="text-nowrap logo-img d-block py-3 w-100">
                <h3>
                    <strong>
                        <i class="ti ti-robot" style="margin-right: 4px"></i>
                    </strong>
                    <strong>Aurora</strong>
                </h3>
            </a>
            <div class="close-btn text d-xl-none d-block sidebartoggler cursor-pointer" id="sidebarCollapse" @onclick="ToggleNavMenu">
                <i class="ti ti-x fs-8"></i>
            </div>
        </div>
        <nav class="sidebar-nav scroll-sidebar" data-simplebar="">
            <ul id="sidebarnav">
                <li class="nav-small-cap">
                    <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                    <span class="hide-menu">OVERVIEW</span>
                </li>

                <li class="sidebar-item">
                    <a class="sidebar-link" href="/" aria-expanded="false">
                        <span>
                            <i class="ti ti-layout-dashboard"></i>
                        </span>
                        <span class="hide-menu">Dashboard</span>
                    </a>
                </li>

                <li class="nav-small-cap">
                    <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                    <span class="hide-menu">PORTFOLIO</span>
                </li>

                <li class="sidebar-item">
                    <div class="sidebar-link has-arrow" aria-expanded="false" @onclick="ToggleSubNavMenu">
                        <span class="d-flex">
                            <i class="ti ti-building"></i>
                        </span>
                        <span class="hide-menu">Company</span>
                    </div>
                    <ul aria-expanded="false" class="@SubNavMenuCssClass first-level">
                        <li class="sidebar-item">
                            @foreach (var tenant in tenants)
                            {
                                <a class="sidebar-link cursor-pointer" @onclick="() => ChangeTenant(tenant.Id)">
                                    <div class="round-16 d-flex align-items-center justify-content-center">
                                        <i class="ti ti-circle-filled"></i>
                                    </div>
                                    <span class="hide-menu">@tenant.Name</span>
                                </a>


                            }
                        </li>
                    </ul>
                </li>

                <li class="nav-small-cap">
                    <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                    <span class="hide-menu">BUSINESS</span>
                </li>

                <li class="sidebar-item">
                    <a class="sidebar-link" href="/products" aria-expanded="false">
                        <span>
                            <i class="ti ti-building-store"></i>
                        </span>
                        <span class="hide-menu">Products</span>
                    </a>
                </li>

                <li class="sidebar-item">
                    <a class="sidebar-link" href="categories" aria-expanded="false">
                        <span>
                            <i class="ti ti-category"></i>
                        </span>
                        <span class="hide-menu">Categories</span>
                    </a>
                </li>

                <li class="sidebar-item">
                    <div class="sidebar-link has-arrow" aria-expanded="false" @onclick="ToggleSubNavMenuAgent">
                        <span class="d-flex">
                            <i class="ti ti-users"></i>
                        </span>
                        <span class="hide-menu">Agents</span>
                    </div>
                    <ul aria-expanded="false" class="@SubNavMenuCssClassAgent first-level">
                        @if(agentTypes is not null && !isLoading)
                        {
                            <li class="sidebar-item">
                                @foreach (var agentType in agentTypes)
                                {
                                    <a class="sidebar-link cursor-pointer" @onclick="() => SelectAgentType(agentType)">
                                        <div class="round-16 d-flex align-items-center justify-content-center">
                                            <i class="ti ti-circle-filled"></i>
                                        </div>
                                        <span class="hide-menu" value="@agentType.AgentTypeId">@agentType.AgentTypeName</span>
                                    </a>
                                }
                            </li>
                        }
                        else
                        {
                            <li class="p-2 mt-2">
                                <Frontend.Web.Components.Loader.LoadingSpinner />
                            </li>
                        }
                    </ul>
                </li>
                <li class="sidebar-item">
                    <a class="sidebar-link" href="/stock" aria-expanded="false">
                        <span>
                            <i class="ti ti-box"></i>
                        </span>
                        <span class="hide-menu">Stock</span>
                    </a>
                </li>
                <li class="sidebar-item">
                    <a class="sidebar-link" href="/orders" aria-expanded="false">
                        <span>
                            <i class="ti ti-shopping-cart"></i>
                        </span>
                        <span class="hide-menu">Orders</span>
                    </a>
                </li>

                <li class="nav-small-cap">
                    <i class="ti ti-dots nav-small-cap-icon fs-4"></i>
                    <span class="hide-menu">PROFILE</span>
                </li>
                <li class="sidebar-item">
                    <a class="sidebar-link" href="/settings" aria-expanded="false">
                        <span>
                            <i class="ti ti-settings"></i>
                        </span>
                        <span class="hide-menu">Settings</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</aside>

@code {
    private IEnumerable<Tenant> tenants = new List<Tenant>();
    private IEnumerable<AgentType>? agentTypes;


    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        await GetTenants();
        await LoadAgents();
        isLoading = false;
    }

    private async Task GetTenants()
    {
        tenants = await _tenantService.GetTenantsByUserId();
    }

    private async Task LoadAgents()
    {
        var response = await _agentService.GetAgentTypes();
        agentTypes = response.Result;
    }

    

    public void SelectAgentType(AgentType agentType)
    {
         
        navigator.NavigateTo($"/agents/{agentType.AgentTypeId}",forceLoad:true );
    }

}

@code
{
    private async void ChangeTenant(Guid tenantId)
    {
        Tenant selectedTenant = await _tenantService.SetTenant(tenantId);
        var response = await _authenticationService.UpdateTenantInformationInContext(selectedTenant);
        if (!response)
            throw new Exception("Could not change the tenant profile.");
        navigator.NavigateTo("/", forceLoad: true);
    }
}

@code
{
    private bool isLoading = false;
}

@code
{
    private bool collapseSubNavMenu = true;
    private string? SubNavMenuCssClass => collapseSubNavMenu ? "collapse" : null;
    private void ToggleSubNavMenu() => collapseSubNavMenu = !collapseSubNavMenu;

    private bool collapseSubNavMenuAgent = true;
    private string? SubNavMenuCssClassAgent => collapseSubNavMenuAgent ? "collapse" : null;
    private void ToggleSubNavMenuAgent() => collapseSubNavMenuAgent = !collapseSubNavMenuAgent;
}

@code
{
    [Parameter] public bool CollapseNavMenu { get; set; }
    [Parameter] public Action ToggleNavMenu { get; set; }
}

@code
{
    [Parameter] public bool Theme { get; set; }
}



