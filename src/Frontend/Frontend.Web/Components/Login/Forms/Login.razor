@using Backend.Domain.Entities.Authentication.Users.Login.Request;
@using Backend.Domain.Entities.Authentication.Users.UserContext;
@using Frontend.Web.Services.Authentication
@inject AuthenticationService _authenticationService;
@inject NavigationManager Navigator

<div class="container" style="margin-top:30px">
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading"><h3 class="panel-title"><strong>Sign In </strong></h3></div>
            @if (logged)
            {
                // TODO: Implement redirecting to main page 
                <div class="alert alert-success fade-in" role="alert">
                    Success, redirecting to main page. 
                </div>
            }
            else
            {
                <div class="alert alert-warning fade-in" role="alert">
                    Something went wrong.
                </div>
            }
            <div class="panel-body">
                <form role="form">
                    <div class="form-group">
                        <label for="username">Username</label>
                        <input type="email" class="form-control" id="username" placeholder="Enter email" @bind="@model.Username">
                    </div>
                    <div class="form-group">
                        <label for="password">Password</label>
                        <input type="password" class="form-control" id="password" placeholder="Password" @bind="@model.Password">
                    </div>
                    <button type="button" @onclick="SignIn" class="btn btn-default">Log in</button>
                </form>
            </div>
        </div>
    </div>
</div>

@code
{
    public bool logged;
    private LoginRequest model = new LoginRequest();

    public async Task<bool> SignIn()
    {
        logged = await _authenticationService.SignIn(model);
        RedirectAfterSuccess(logged);
        return logged;
    }
    
    public void RedirectAfterSuccess(bool logged)
    {
        if (logged) Navigator.NavigateTo("/", true);
    }
    
}